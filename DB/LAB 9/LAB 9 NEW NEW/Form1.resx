<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5XLlTUqN0tin/9k=
</value>
  </data>
</root>